{"ast":null,"code":"var _jsxFileName = \"/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport LoginScreen from './pages/LoginScreen.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:5001/api';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n  useEffect(() => {\n    if (!token) return;\n    axios.get(`${API}/tasks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(res.data));\n  }, [token]);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(LoginScreen, {\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  const renderTimeInputs = taskId => {\n    const time = timeInputs[taskId] || {\n      start: '',\n      end: '',\n      meridiem: 'AM'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"__:__\",\n        value: time.start,\n        onChange: e => updateTime(taskId, 'start', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"__:__\",\n        value: time.end,\n        onChange: e => updateTime(taskId, 'end', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMeridiem(taskId),\n        children: time.meridiem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTaskButtons = task => {\n    const isSelected = task._id === selectedTaskId;\n    const isComplete = task.status === 'complete';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleStatus(task._id),\n        children: isComplete ? 'Incomplete' : 'Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faClock,\n        onClick: () => setSelectedTaskId(task._id),\n        className: \"clock-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAllDay(task._id),\n          children: \"Span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSaveTime(task._id),\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), renderTimeInputs(task._id)]\n      }, void 0, true)]\n    }, void 0, true);\n  };\n  const renderTaskList = () => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"tasks\",\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task ${task.status === 'complete' ? 'completed' : ''}`,\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          onClick: () => setSelectedTaskId(task._id),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), renderTaskButtons(task)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: renderTaskList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n  function handleCreate() {\n    if (!title.trim()) return;\n    axios.post(`${API}/tasks`, {\n      title\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(prev => [...prev, res.data]));\n    setTitle('');\n  }\n  function handleDelete(taskId) {\n    axios.delete(`${API}/tasks/${taskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => setTasks(prev => prev.filter(t => t._id !== taskId)));\n  }\n  function toggleStatus(taskId) {\n    const task = tasks.find(t => t._id === taskId);\n    const newStatus = task.status === 'complete' ? 'pending' : 'complete';\n    axios.patch(`${API}/tasks/${taskId}`, {\n      status: newStatus\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(prev => prev.map(t => t._id === taskId ? res.data : t)));\n  }\n  function updateTime(taskId, field, value) {\n    setTimeInputs(prev => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        [field]: value\n      }\n    }));\n  }\n  function toggleMeridiem(taskId) {\n    setTimeInputs(prev => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        meridiem: prev[taskId].meridiem === 'AM' ? 'PM' : 'AM'\n      }\n    }));\n  }\n  function handleAllDay(taskId) {\n    setAllDayTasks(prev => ({\n      ...prev,\n      [taskId]: true\n    }));\n  }\n  function handleSaveTime(taskId) {\n    setSavedTimes(prev => ({\n      ...prev,\n      [taskId]: timeInputs[taskId]\n    }));\n  }\n  function handleDragEnd(result) {\n    if (!result.destination) return;\n    const reordered = [...tasks];\n    const [removed] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, removed);\n    setTasks(reordered);\n  }\n}\n_s(App, \"tSZnHOHJbCYNf4DrBDx9hu8MWpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DragDropContext","Droppable","Draggable","FontAwesomeIcon","faClock","LoginScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","API","App","_s","tasks","setTasks","title","setTitle","token","setToken","localStorage","getItem","selectedTaskId","setSelectedTaskId","timeInputs","setTimeInputs","savedTimes","setSavedTimes","allDayTasks","setAllDayTasks","get","headers","Authorization","then","res","data","handleClickOutside","e","target","closest","window","addEventListener","removeEventListener","fileName","_jsxFileName","lineNumber","columnNumber","renderTimeInputs","taskId","time","start","end","meridiem","className","children","type","placeholder","value","onChange","updateTime","onClick","toggleMeridiem","renderTaskButtons","task","isSelected","_id","isComplete","status","handleDelete","toggleStatus","icon","handleAllDay","handleSaveTime","renderTaskList","droppableId","provided","droppableProps","ref","innerRef","map","index","draggableId","draggableProps","dragHandleProps","handleCreate","onDragEnd","handleDragEnd","trim","post","prev","delete","filter","t","find","newStatus","patch","field","result","destination","reordered","removed","splice","source","_c","$RefreshReg$"],"sources":["/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport LoginScreen from './pages/LoginScreen.js';\n\nconst API = 'http://localhost:5001/api';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n\n  useEffect(() => {\n    if (!token) return;\n    axios\n      .get(`${API}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then((res) => setTasks(res.data));\n  }, [token]);\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  if (!token) {\n    return <LoginScreen setToken={setToken} />;\n  }\n\n  const renderTimeInputs = (taskId) => {\n    const time = timeInputs[taskId] || { start: '', end: '', meridiem: 'AM' };\n    return (\n      <div className=\"time-inputs\">\n        <input\n          type=\"text\"\n          placeholder=\"__:__\"\n          value={time.start}\n          onChange={(e) => updateTime(taskId, 'start', e.target.value)}\n        />\n        <span> - </span>\n        <input\n          type=\"text\"\n          placeholder=\"__:__\"\n          value={time.end}\n          onChange={(e) => updateTime(taskId, 'end', e.target.value)}\n        />\n        <button onClick={() => toggleMeridiem(taskId)}>{time.meridiem}</button>\n      </div>\n    );\n  };\n\n  const renderTaskButtons = (task) => {\n    const isSelected = task._id === selectedTaskId;\n    const isComplete = task.status === 'complete';\n    return (\n      <>\n        <button onClick={() => handleDelete(task._id)}>Delete</button>\n        <button onClick={() => toggleStatus(task._id)}>\n          {isComplete ? 'Incomplete' : 'Complete'}\n        </button>\n        <FontAwesomeIcon\n          icon={faClock}\n          onClick={() => setSelectedTaskId(task._id)}\n          className=\"clock-icon\"\n        />\n        {isSelected && (\n          <>\n            <button onClick={() => handleAllDay(task._id)}>Span</button>\n            <button onClick={() => handleSaveTime(task._id)}>Event</button>\n            {renderTimeInputs(task._id)}\n          </>\n        )}\n      </>\n    );\n  };\n\n  const renderTaskList = () => (\n    <Droppable droppableId=\"tasks\">\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          {tasks.map((task, index) => (\n            <Draggable key={task._id} draggableId={task._id} index={index}>\n              {(provided) => (\n                <div\n                  className={`task ${task.status === 'complete' ? 'completed' : ''}`}\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  onClick={() => setSelectedTaskId(task._id)}\n                >\n                  <h4>{task.title}</h4>\n                  {renderTaskButtons(task)}\n                </div>\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <input\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"New Task\"\n      />\n      <button onClick={handleCreate}>Add Task</button>\n      <DragDropContext onDragEnd={handleDragEnd}>{renderTaskList()}</DragDropContext>\n    </div>\n  );\n\n  function handleCreate() {\n    if (!title.trim()) return;\n    axios\n      .post(\n        `${API}/tasks`,\n        { title },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((res) => setTasks((prev) => [...prev, res.data]));\n    setTitle('');\n  }\n\n  function handleDelete(taskId) {\n    axios\n      .delete(`${API}/tasks/${taskId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then(() => setTasks((prev) => prev.filter((t) => t._id !== taskId)));\n  }\n\n  function toggleStatus(taskId) {\n    const task = tasks.find((t) => t._id === taskId);\n    const newStatus = task.status === 'complete' ? 'pending' : 'complete';\n    axios\n      .patch(\n        `${API}/tasks/${taskId}`,\n        { status: newStatus },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((res) =>\n        setTasks((prev) => prev.map((t) => (t._id === taskId ? res.data : t)))\n      );\n  }\n\n  function updateTime(taskId, field, value) {\n    setTimeInputs((prev) => ({\n      ...prev,\n      [taskId]: { ...prev[taskId], [field]: value },\n    }));\n  }\n\n  function toggleMeridiem(taskId) {\n    setTimeInputs((prev) => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        meridiem: prev[taskId].meridiem === 'AM' ? 'PM' : 'AM',\n      },\n    }));\n  }\n\n  function handleAllDay(taskId) {\n    setAllDayTasks((prev) => ({ ...prev, [taskId]: true }));\n  }\n\n  function handleSaveTime(taskId) {\n    setSavedTimes((prev) => ({ ...prev, [taskId]: timeInputs[taskId] }));\n  }\n\n  function handleDragEnd(result) {\n    if (!result.destination) return;\n    const reordered = [...tasks];\n    const [removed] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, removed);\n    setTasks(reordered);\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}