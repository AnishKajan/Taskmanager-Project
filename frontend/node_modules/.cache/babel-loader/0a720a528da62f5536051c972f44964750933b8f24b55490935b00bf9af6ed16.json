{"ast":null,"code":"var _jsxFileName = \"/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:5001/api';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n\n  // Load tasks from API\n  useEffect(() => {\n    if (!token) return;\n    axios.get(`${API}/tasks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(res.data));\n  }, [token]);\n\n  // Deselect task when clicking outside\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  // Simulated login\n  const login = async () => {\n    const res = await axios.post(`${API}/auth/login`, {\n      email: 'test@example.com',\n      password: 'taskpass123'\n    });\n    localStorage.setItem('token', res.data.token);\n    setToken(res.data.token);\n  };\n\n  // Create a new task\n  const addTask = async () => {\n    await axios.post(`${API}/tasks`, {\n      title\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const res = await axios.get(`${API}/tasks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setTasks(res.data);\n    setTitle('');\n  };\n\n  // Delete selected task\n  const deleteTask = async () => {\n    if (!selectedTaskId) return;\n    await axios.delete(`${API}/tasks/${selectedTaskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setTasks(tasks.filter(task => task._id !== selectedTaskId));\n    setSelectedTaskId(null);\n  };\n\n  // Toggle task status between pending and complete\n  const toggleStatus = async (taskId, newStatus) => {\n    const res = await axios.patch(`${API}/tasks/${taskId}`, {\n      status: newStatus\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setTasks(prev => prev.map(t => t._id === taskId ? {\n      ...t,\n      status: res.data.status\n    } : t));\n    // Reset any time or all-day mode if completed\n    if (newStatus === 'complete') {\n      setSavedTimes(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[taskId];\n        return copy;\n      });\n      setAllDayTasks(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[taskId];\n        return copy;\n      });\n    }\n    setSelectedTaskId(null);\n  };\n\n  // When clicking on a task, toggle selection\n  const handleTaskClick = id => {\n    setSelectedTaskId(prev => prev === id ? null : id);\n    setTimeInputs(prev => ({\n      ...prev,\n      [id]: {\n        hour: '',\n        minute: '',\n        period: 'am'\n      }\n    }));\n  };\n\n  // Save a time or clear it if already set\n  const saveTime = taskId => {\n    if (savedTimes[taskId]) {\n      setSavedTimes(prev => {\n        const updated = {\n          ...prev\n        };\n        delete updated[taskId];\n        return updated;\n      });\n      setSelectedTaskId(null);\n      return;\n    }\n    const {\n      hour,\n      minute,\n      period\n    } = timeInputs[taskId];\n    if (hour && minute) {\n      const timeStr = `${hour.padStart(2, '0')}:${minute.padStart(2, '0')} ${period.toUpperCase()}`;\n      setSavedTimes(prev => ({\n        ...prev,\n        [taskId]: timeStr\n      }));\n      setAllDayTasks(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[taskId];\n        return copy;\n      });\n      setSelectedTaskId(null);\n    }\n  };\n\n  // Toggle all-day mode and clear time if set\n  const markAllDay = taskId => {\n    setAllDayTasks(prev => {\n      const updated = {\n        ...prev\n      };\n      if (updated[taskId]) {\n        delete updated[taskId];\n      } else {\n        updated[taskId] = true;\n        setSavedTimes(prev => {\n          const copy = {\n            ...prev\n          };\n          delete copy[taskId];\n          return copy;\n        });\n      }\n      return updated;\n    });\n    setSelectedTaskId(null);\n  };\n\n  // Drag-and-drop handler\n  const onDragEnd = result => {\n    if (!result.destination) return;\n    const newTasks = [...tasks];\n    const [movedTask] = newTasks.splice(result.source.index, 1);\n    newTasks.splice(result.destination.index, 0, movedTask);\n    setTasks(newTasks);\n  };\n  if (!token) return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: login,\n    children: \"Login (Demo)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"taskList\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"task-list\",\n          children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task._id,\n            index: index,\n            children: (provided, snapshot) => {\n              const isSelected = selectedTaskId === task._id;\n              const isComplete = task.status === 'complete';\n              const classNames = ['task', isSelected && 'selected', isComplete && 'completed', allDayTasks[task._id] && 'all-day'].filter(Boolean).join(' ');\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                onClick: e => {\n                  e.stopPropagation();\n                  handleTaskClick(task._id);\n                },\n                className: classNames,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 29\n                    }, this), \"Status: \", allDayTasks[task._id] ? 'all-day' : task.status, savedTimes[task._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"time-display\",\n                      children: [\"\\u23F0 \", savedTimes[task._id]]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClock,\n                    className: \"clock-icon\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleTaskClick(task._id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this), isSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        deleteTask();\n                      },\n                      className: \"btn delete\",\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleStatus(task._id, task.status === 'pending' ? 'complete' : 'pending');\n                      },\n                      className: `btn ${task.status === 'pending' ? 'complete' : 'incomplete'}`,\n                      children: task.status === 'pending' ? 'Complete' : 'Incomplete'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 29\n                  }, this), timeInputs[task._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-entry\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"1\",\n                      max: \"12\",\n                      placeholder: \"HH\",\n                      value: timeInputs[task._id].hour,\n                      onChange: e => setTimeInputs(prev => ({\n                        ...prev,\n                        [task._id]: {\n                          ...prev[task._id],\n                          hour: e.target.value\n                        }\n                      })),\n                      onClick: e => e.stopPropagation(),\n                      style: {\n                        width: 50,\n                        padding: 4\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 33\n                    }, this), \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"0\",\n                      max: \"59\",\n                      placeholder: \"MM\",\n                      value: timeInputs[task._id].minute,\n                      onChange: e => setTimeInputs(prev => ({\n                        ...prev,\n                        [task._id]: {\n                          ...prev[task._id],\n                          minute: e.target.value\n                        }\n                      })),\n                      onClick: e => e.stopPropagation(),\n                      style: {\n                        width: 50,\n                        padding: 4\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: timeInputs[task._id].period,\n                      onChange: e => setTimeInputs(prev => ({\n                        ...prev,\n                        [task._id]: {\n                          ...prev[task._id],\n                          period: e.target.value\n                        }\n                      })),\n                      onClick: e => e.stopPropagation(),\n                      style: {\n                        padding: 4\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"am\",\n                        children: \"AM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"pm\",\n                        children: \"PM\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        saveTime(task._id);\n                      },\n                      className: \"btn enter\",\n                      children: \"Enter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        markAllDay(task._id);\n                      },\n                      className: \"btn all-day\",\n                      children: \"All-Day\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this);\n            }\n          }, task._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tSZnHOHJbCYNf4DrBDx9hu8MWpE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DragDropContext","Droppable","Draggable","FontAwesomeIcon","faClock","jsxDEV","_jsxDEV","Fragment","_Fragment","API","App","_s","tasks","setTasks","title","setTitle","token","setToken","localStorage","getItem","selectedTaskId","setSelectedTaskId","timeInputs","setTimeInputs","savedTimes","setSavedTimes","allDayTasks","setAllDayTasks","get","headers","Authorization","then","res","data","handleClickOutside","e","target","closest","window","addEventListener","removeEventListener","login","post","email","password","setItem","addTask","deleteTask","delete","filter","task","_id","toggleStatus","taskId","newStatus","patch","status","prev","map","t","copy","handleTaskClick","id","hour","minute","period","saveTime","updated","timeStr","padStart","toUpperCase","markAllDay","onDragEnd","result","destination","newTasks","movedTask","splice","source","index","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","padding","value","onChange","placeholder","droppableId","provided","droppableProps","ref","innerRef","draggableId","snapshot","isSelected","isComplete","classNames","Boolean","join","draggableProps","dragHandleProps","stopPropagation","icon","type","min","max","width","_c","$RefreshReg$"],"sources":["/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\n\nconst API = 'http://localhost:5001/api';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n\n  // Load tasks from API\n  useEffect(() => {\n    if (!token) return;\n    axios.get(`${API}/tasks`, {\n      headers: { Authorization: `Bearer ${token}` },\n    }).then((res) => setTasks(res.data));\n  }, [token]);\n\n  // Deselect task when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  // Simulated login\n  const login = async () => {\n    const res = await axios.post(`${API}/auth/login`, {\n      email: 'test@example.com',\n      password: 'taskpass123',\n    });\n    localStorage.setItem('token', res.data.token);\n    setToken(res.data.token);\n  };\n\n  // Create a new task\n  const addTask = async () => {\n    await axios.post(`${API}/tasks`, { title }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    const res = await axios.get(`${API}/tasks`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    setTasks(res.data);\n    setTitle('');\n  };\n\n  // Delete selected task\n  const deleteTask = async () => {\n    if (!selectedTaskId) return;\n    await axios.delete(`${API}/tasks/${selectedTaskId}`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    setTasks(tasks.filter(task => task._id !== selectedTaskId));\n    setSelectedTaskId(null);\n  };\n\n  // Toggle task status between pending and complete\n  const toggleStatus = async (taskId, newStatus) => {\n    const res = await axios.patch(`${API}/tasks/${taskId}`, { status: newStatus }, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    setTasks(prev => prev.map(t => t._id === taskId ? { ...t, status: res.data.status } : t));\n    // Reset any time or all-day mode if completed\n    if (newStatus === 'complete') {\n      setSavedTimes((prev) => {\n        const copy = { ...prev };\n        delete copy[taskId];\n        return copy;\n      });\n      setAllDayTasks((prev) => {\n        const copy = { ...prev };\n        delete copy[taskId];\n        return copy;\n      });\n    }\n    setSelectedTaskId(null);\n  };\n\n  // When clicking on a task, toggle selection\n  const handleTaskClick = (id) => {\n    setSelectedTaskId((prev) => (prev === id ? null : id));\n    setTimeInputs((prev) => ({ ...prev, [id]: { hour: '', minute: '', period: 'am' } }));\n  };\n\n  // Save a time or clear it if already set\n  const saveTime = (taskId) => {\n    if (savedTimes[taskId]) {\n      setSavedTimes(prev => {\n        const updated = { ...prev };\n        delete updated[taskId];\n        return updated;\n      });\n      setSelectedTaskId(null);\n      return;\n    }\n    const { hour, minute, period } = timeInputs[taskId];\n    if (hour && minute) {\n      const timeStr = `${hour.padStart(2, '0')}:${minute.padStart(2, '0')} ${period.toUpperCase()}`;\n      setSavedTimes(prev => ({ ...prev, [taskId]: timeStr }));\n      setAllDayTasks(prev => {\n        const copy = { ...prev };\n        delete copy[taskId];\n        return copy;\n      });\n      setSelectedTaskId(null);\n    }\n  };\n\n  // Toggle all-day mode and clear time if set\n  const markAllDay = (taskId) => {\n    setAllDayTasks(prev => {\n      const updated = { ...prev };\n      if (updated[taskId]) {\n        delete updated[taskId];\n      } else {\n        updated[taskId] = true;\n        setSavedTimes((prev) => {\n          const copy = { ...prev };\n          delete copy[taskId];\n          return copy;\n        });\n      }\n      return updated;\n    });\n    setSelectedTaskId(null);\n  };\n\n  // Drag-and-drop handler\n  const onDragEnd = (result) => {\n    if (!result.destination) return;\n    const newTasks = [...tasks];\n    const [movedTask] = newTasks.splice(result.source.index, 1);\n    newTasks.splice(result.destination.index, 0, movedTask);\n    setTasks(newTasks);\n  };\n\n  if (!token) return <button onClick={login}>Login (Demo)</button>;\n\n  return (\n    <div className=\"container\" style={{ padding: '20px' }}>\n      <h2>Task Manager</h2>\n      <input value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"New Task\" />\n      <button onClick={addTask}>Add Task</button>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"taskList\">\n          {(provided) => (\n            <div {...provided.droppableProps} ref={provided.innerRef} className=\"task-list\">\n              {tasks.map((task, index) => (\n                <Draggable key={task._id} draggableId={task._id} index={index}>\n                  {(provided, snapshot) => {\n                    const isSelected = selectedTaskId === task._id;\n                    const isComplete = task.status === 'complete';\n\n                    const classNames = [\n                      'task',\n                      isSelected && 'selected',\n                      isComplete && 'completed',\n                      allDayTasks[task._id] && 'all-day'\n                    ].filter(Boolean).join(' ');\n\n                    return (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleTaskClick(task._id);\n                        }}\n                        className={classNames}\n                      >\n                        <div className=\"task-header\">\n                          <div>\n                            <strong>{task.title}</strong>\n                            <br />\n                            Status: {allDayTasks[task._id] ? 'all-day' : task.status}\n                            {savedTimes[task._id] && (\n                              <div className=\"time-display\">⏰ {savedTimes[task._id]}</div>\n                            )}\n                          </div>\n                          {/* Clock button (toggles selection and input view) */}\n                          <FontAwesomeIcon\n                            icon={faClock}\n                            className=\"clock-icon\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleTaskClick(task._id);\n                            }}\n                          />\n                        </div>\n\n                        {/* Input/Control section */}\n                        {isSelected && (\n                          <>\n                            <div className=\"task-actions\">\n                              {/* Delete button */}\n                              <button onClick={(e) => { e.stopPropagation(); deleteTask(); }} className=\"btn delete\">Delete</button>\n                              {/* Toggle Complete/Incomplete */}\n                              <button onClick={(e) => { e.stopPropagation(); toggleStatus(task._id, task.status === 'pending' ? 'complete' : 'pending'); }} className={`btn ${task.status === 'pending' ? 'complete' : 'incomplete'}`}>{task.status === 'pending' ? 'Complete' : 'Incomplete'}</button>\n                            </div>\n\n                            {/* Time input + buttons */}\n                            {timeInputs[task._id] && (\n                              <div className=\"time-entry\">\n                                {/* Hour input */}\n                                <input type=\"number\" min=\"1\" max=\"12\" placeholder=\"HH\" value={timeInputs[task._id].hour} onChange={(e) => setTimeInputs((prev) => ({ ...prev, [task._id]: { ...prev[task._id], hour: e.target.value } }))} onClick={(e) => e.stopPropagation()} style={{ width: 50, padding: 4 }} />\n                                :\n                                {/* Minute input */}\n                                <input type=\"number\" min=\"0\" max=\"59\" placeholder=\"MM\" value={timeInputs[task._id].minute} onChange={(e) => setTimeInputs((prev) => ({ ...prev, [task._id]: { ...prev[task._id], minute: e.target.value } }))} onClick={(e) => e.stopPropagation()} style={{ width: 50, padding: 4 }} />\n                                {/* AM/PM select */}\n                                <select value={timeInputs[task._id].period} onChange={(e) => setTimeInputs((prev) => ({ ...prev, [task._id]: { ...prev[task._id], period: e.target.value } }))} onClick={(e) => e.stopPropagation()} style={{ padding: 4 }}>\n                                  <option value=\"am\">AM</option>\n                                  <option value=\"pm\">PM</option>\n                                </select>\n                                {/* Enter time button */}\n                                <button onClick={(e) => { e.stopPropagation(); saveTime(task._id); }} className=\"btn enter\">Enter</button>\n                                {/* All-day button */}\n                                <button onClick={(e) => { e.stopPropagation(); markAllDay(task._id); }} className=\"btn all-day\">All-Day</button>\n                              </div>\n                            )}\n                          </>\n                        )}\n                      </div>\n                    );\n                  }}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAC3E,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,GAAG,GAAG,2BAA2B;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAACoB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACvE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,KAAK,EAAE;IACZjB,KAAK,CAAC6B,GAAG,CAAC,GAAGnB,GAAG,QAAQ,EAAE;MACxBoB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUd,KAAK;MAAG;IAC9C,CAAC,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAKnB,QAAQ,CAACmB,GAAG,CAACC,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,CAACjB,KAAK,CAAC,CAAC;;EAEX;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMqC,kBAAkB,GAAIC,CAAC,IAAK;MAChC,IAAI,CAACA,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,OAAO,CAAC,EAAEhB,iBAAiB,CAAC,IAAI,CAAC;IACzD,CAAC;IACDiB,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEL,kBAAkB,CAAC;IACpD,OAAO,MAAMI,MAAM,CAACE,mBAAmB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMT,GAAG,GAAG,MAAMjC,KAAK,CAAC2C,IAAI,CAAC,GAAGjC,GAAG,aAAa,EAAE;MAChDkC,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF1B,YAAY,CAAC2B,OAAO,CAAC,OAAO,EAAEb,GAAG,CAACC,IAAI,CAACjB,KAAK,CAAC;IAC7CC,QAAQ,CAACe,GAAG,CAACC,IAAI,CAACjB,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM8B,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAM/C,KAAK,CAAC2C,IAAI,CAAC,GAAGjC,GAAG,QAAQ,EAAE;MAAEK;IAAM,CAAC,EAAE;MAC1Ce,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUd,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,MAAMgB,GAAG,GAAG,MAAMjC,KAAK,CAAC6B,GAAG,CAAC,GAAGnB,GAAG,QAAQ,EAAE;MAC1CoB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUd,KAAK;MAAG;IAC9C,CAAC,CAAC;IACFH,QAAQ,CAACmB,GAAG,CAACC,IAAI,CAAC;IAClBlB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACA,MAAMgC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC3B,cAAc,EAAE;IACrB,MAAMrB,KAAK,CAACiD,MAAM,CAAC,GAAGvC,GAAG,UAAUW,cAAc,EAAE,EAAE;MACnDS,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUd,KAAK;MAAG;IAC9C,CAAC,CAAC;IACFH,QAAQ,CAACD,KAAK,CAACqC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAK/B,cAAc,CAAC,CAAC;IAC3DC,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAM+B,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;IAChD,MAAMtB,GAAG,GAAG,MAAMjC,KAAK,CAACwD,KAAK,CAAC,GAAG9C,GAAG,UAAU4C,MAAM,EAAE,EAAE;MAAEG,MAAM,EAAEF;IAAU,CAAC,EAAE;MAC7EzB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUd,KAAK;MAAG;IAC9C,CAAC,CAAC;IACFH,QAAQ,CAAC4C,IAAI,IAAIA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACR,GAAG,KAAKE,MAAM,GAAG;MAAE,GAAGM,CAAC;MAAEH,MAAM,EAAExB,GAAG,CAACC,IAAI,CAACuB;IAAO,CAAC,GAAGG,CAAC,CAAC,CAAC;IACzF;IACA,IAAIL,SAAS,KAAK,UAAU,EAAE;MAC5B7B,aAAa,CAAEgC,IAAI,IAAK;QACtB,MAAMG,IAAI,GAAG;UAAE,GAAGH;QAAK,CAAC;QACxB,OAAOG,IAAI,CAACP,MAAM,CAAC;QACnB,OAAOO,IAAI;MACb,CAAC,CAAC;MACFjC,cAAc,CAAE8B,IAAI,IAAK;QACvB,MAAMG,IAAI,GAAG;UAAE,GAAGH;QAAK,CAAC;QACxB,OAAOG,IAAI,CAACP,MAAM,CAAC;QACnB,OAAOO,IAAI;MACb,CAAC,CAAC;IACJ;IACAvC,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMwC,eAAe,GAAIC,EAAE,IAAK;IAC9BzC,iBAAiB,CAAEoC,IAAI,IAAMA,IAAI,KAAKK,EAAE,GAAG,IAAI,GAAGA,EAAG,CAAC;IACtDvC,aAAa,CAAEkC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACK,EAAE,GAAG;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAK;IAAE,CAAC,CAAC,CAAC;EACtF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIb,MAAM,IAAK;IAC3B,IAAI7B,UAAU,CAAC6B,MAAM,CAAC,EAAE;MACtB5B,aAAa,CAACgC,IAAI,IAAI;QACpB,MAAMU,OAAO,GAAG;UAAE,GAAGV;QAAK,CAAC;QAC3B,OAAOU,OAAO,CAACd,MAAM,CAAC;QACtB,OAAOc,OAAO;MAChB,CAAC,CAAC;MACF9C,iBAAiB,CAAC,IAAI,CAAC;MACvB;IACF;IACA,MAAM;MAAE0C,IAAI;MAAEC,MAAM;MAAEC;IAAO,CAAC,GAAG3C,UAAU,CAAC+B,MAAM,CAAC;IACnD,IAAIU,IAAI,IAAIC,MAAM,EAAE;MAClB,MAAMI,OAAO,GAAG,GAAGL,IAAI,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIL,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIJ,MAAM,CAACK,WAAW,CAAC,CAAC,EAAE;MAC7F7C,aAAa,CAACgC,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACJ,MAAM,GAAGe;MAAQ,CAAC,CAAC,CAAC;MACvDzC,cAAc,CAAC8B,IAAI,IAAI;QACrB,MAAMG,IAAI,GAAG;UAAE,GAAGH;QAAK,CAAC;QACxB,OAAOG,IAAI,CAACP,MAAM,CAAC;QACnB,OAAOO,IAAI;MACb,CAAC,CAAC;MACFvC,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMkD,UAAU,GAAIlB,MAAM,IAAK;IAC7B1B,cAAc,CAAC8B,IAAI,IAAI;MACrB,MAAMU,OAAO,GAAG;QAAE,GAAGV;MAAK,CAAC;MAC3B,IAAIU,OAAO,CAACd,MAAM,CAAC,EAAE;QACnB,OAAOc,OAAO,CAACd,MAAM,CAAC;MACxB,CAAC,MAAM;QACLc,OAAO,CAACd,MAAM,CAAC,GAAG,IAAI;QACtB5B,aAAa,CAAEgC,IAAI,IAAK;UACtB,MAAMG,IAAI,GAAG;YAAE,GAAGH;UAAK,CAAC;UACxB,OAAOG,IAAI,CAACP,MAAM,CAAC;UACnB,OAAOO,IAAI;QACb,CAAC,CAAC;MACJ;MACA,OAAOO,OAAO;IAChB,CAAC,CAAC;IACF9C,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMmD,SAAS,GAAIC,MAAM,IAAK;IAC5B,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IACzB,MAAMC,QAAQ,GAAG,CAAC,GAAG/D,KAAK,CAAC;IAC3B,MAAM,CAACgE,SAAS,CAAC,GAAGD,QAAQ,CAACE,MAAM,CAACJ,MAAM,CAACK,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC3DJ,QAAQ,CAACE,MAAM,CAACJ,MAAM,CAACC,WAAW,CAACK,KAAK,EAAE,CAAC,EAAEH,SAAS,CAAC;IACvD/D,QAAQ,CAAC8D,QAAQ,CAAC;EACpB,CAAC;EAED,IAAI,CAAC3D,KAAK,EAAE,oBAAOV,OAAA;IAAQ0E,OAAO,EAAEvC,KAAM;IAAAwC,QAAA,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;EAEhE,oBACE/E,OAAA;IAAKgF,SAAS,EAAC,WAAW;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAP,QAAA,gBACpD3E,OAAA;MAAA2E,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB/E,OAAA;MAAOmF,KAAK,EAAE3E,KAAM;MAAC4E,QAAQ,EAAGvD,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACqD,KAAK,CAAE;MAACE,WAAW,EAAC;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzF/E,OAAA;MAAQ0E,OAAO,EAAElC,OAAQ;MAAAmC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE3C/E,OAAA,CAACN,eAAe;MAACwE,SAAS,EAAEA,SAAU;MAAAS,QAAA,eACpC3E,OAAA,CAACL,SAAS;QAAC2F,WAAW,EAAC,UAAU;QAAAX,QAAA,EAC7BY,QAAQ,iBACRvF,OAAA;UAAA,GAASuF,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAACV,SAAS,EAAC,WAAW;UAAAL,QAAA,GAC5ErE,KAAK,CAAC8C,GAAG,CAAC,CAACR,IAAI,EAAE6B,KAAK,kBACrBzE,OAAA,CAACJ,SAAS;YAAgB+F,WAAW,EAAE/C,IAAI,CAACC,GAAI;YAAC4B,KAAK,EAAEA,KAAM;YAAAE,QAAA,EAC3DA,CAACY,QAAQ,EAAEK,QAAQ,KAAK;cACvB,MAAMC,UAAU,GAAG/E,cAAc,KAAK8B,IAAI,CAACC,GAAG;cAC9C,MAAMiD,UAAU,GAAGlD,IAAI,CAACM,MAAM,KAAK,UAAU;cAE7C,MAAM6C,UAAU,GAAG,CACjB,MAAM,EACNF,UAAU,IAAI,UAAU,EACxBC,UAAU,IAAI,WAAW,EACzB1E,WAAW,CAACwB,IAAI,CAACC,GAAG,CAAC,IAAI,SAAS,CACnC,CAACF,MAAM,CAACqD,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;cAE3B,oBACEjG,OAAA;gBACEyF,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACW,cAAc;gBAAA,GACvBX,QAAQ,CAACY,eAAe;gBAC5BzB,OAAO,EAAG7C,CAAC,IAAK;kBACdA,CAAC,CAACuE,eAAe,CAAC,CAAC;kBACnB7C,eAAe,CAACX,IAAI,CAACC,GAAG,CAAC;gBAC3B,CAAE;gBACFmC,SAAS,EAAEe,UAAW;gBAAApB,QAAA,gBAEtB3E,OAAA;kBAAKgF,SAAS,EAAC,aAAa;kBAAAL,QAAA,gBAC1B3E,OAAA;oBAAA2E,QAAA,gBACE3E,OAAA;sBAAA2E,QAAA,EAAS/B,IAAI,CAACpC;oBAAK;sBAAAoE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC,eAC7B/E,OAAA;sBAAA4E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,YACE,EAAC3D,WAAW,CAACwB,IAAI,CAACC,GAAG,CAAC,GAAG,SAAS,GAAGD,IAAI,CAACM,MAAM,EACvDhC,UAAU,CAAC0B,IAAI,CAACC,GAAG,CAAC,iBACnB7C,OAAA;sBAAKgF,SAAS,EAAC,cAAc;sBAAAL,QAAA,GAAC,SAAE,EAACzD,UAAU,CAAC0B,IAAI,CAACC,GAAG,CAAC;oBAAA;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAC5D;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eAEN/E,OAAA,CAACH,eAAe;oBACdwG,IAAI,EAAEvG,OAAQ;oBACdkF,SAAS,EAAC,YAAY;oBACtBN,OAAO,EAAG7C,CAAC,IAAK;sBACdA,CAAC,CAACuE,eAAe,CAAC,CAAC;sBACnB7C,eAAe,CAACX,IAAI,CAACC,GAAG,CAAC;oBAC3B;kBAAE;oBAAA+B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC,EAGLc,UAAU,iBACT7F,OAAA,CAAAE,SAAA;kBAAAyE,QAAA,gBACE3E,OAAA;oBAAKgF,SAAS,EAAC,cAAc;oBAAAL,QAAA,gBAE3B3E,OAAA;sBAAQ0E,OAAO,EAAG7C,CAAC,IAAK;wBAAEA,CAAC,CAACuE,eAAe,CAAC,CAAC;wBAAE3D,UAAU,CAAC,CAAC;sBAAE,CAAE;sBAACuC,SAAS,EAAC,YAAY;sBAAAL,QAAA,EAAC;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAEtG/E,OAAA;sBAAQ0E,OAAO,EAAG7C,CAAC,IAAK;wBAAEA,CAAC,CAACuE,eAAe,CAAC,CAAC;wBAAEtD,YAAY,CAACF,IAAI,CAACC,GAAG,EAAED,IAAI,CAACM,MAAM,KAAK,SAAS,GAAG,UAAU,GAAG,SAAS,CAAC;sBAAE,CAAE;sBAAC8B,SAAS,EAAE,OAAOpC,IAAI,CAACM,MAAM,KAAK,SAAS,GAAG,UAAU,GAAG,YAAY,EAAG;sBAAAyB,QAAA,EAAE/B,IAAI,CAACM,MAAM,KAAK,SAAS,GAAG,UAAU,GAAG;oBAAY;sBAAA0B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAS,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtQ,CAAC,EAGL/D,UAAU,CAAC4B,IAAI,CAACC,GAAG,CAAC,iBACnB7C,OAAA;oBAAKgF,SAAS,EAAC,YAAY;oBAAAL,QAAA,gBAEzB3E,OAAA;sBAAOsG,IAAI,EAAC,QAAQ;sBAACC,GAAG,EAAC,GAAG;sBAACC,GAAG,EAAC,IAAI;sBAACnB,WAAW,EAAC,IAAI;sBAACF,KAAK,EAAEnE,UAAU,CAAC4B,IAAI,CAACC,GAAG,CAAC,CAACY,IAAK;sBAAC2B,QAAQ,EAAGvD,CAAC,IAAKZ,aAAa,CAAEkC,IAAI,KAAM;wBAAE,GAAGA,IAAI;wBAAE,CAACP,IAAI,CAACC,GAAG,GAAG;0BAAE,GAAGM,IAAI,CAACP,IAAI,CAACC,GAAG,CAAC;0BAAEY,IAAI,EAAE5B,CAAC,CAACC,MAAM,CAACqD;wBAAM;sBAAE,CAAC,CAAC,CAAE;sBAACT,OAAO,EAAG7C,CAAC,IAAKA,CAAC,CAACuE,eAAe,CAAC,CAAE;sBAACnB,KAAK,EAAE;wBAAEwB,KAAK,EAAE,EAAE;wBAAEvB,OAAO,EAAE;sBAAE;oBAAE;sBAAAN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,KAEpR,eACA/E,OAAA;sBAAOsG,IAAI,EAAC,QAAQ;sBAACC,GAAG,EAAC,GAAG;sBAACC,GAAG,EAAC,IAAI;sBAACnB,WAAW,EAAC,IAAI;sBAACF,KAAK,EAAEnE,UAAU,CAAC4B,IAAI,CAACC,GAAG,CAAC,CAACa,MAAO;sBAAC0B,QAAQ,EAAGvD,CAAC,IAAKZ,aAAa,CAAEkC,IAAI,KAAM;wBAAE,GAAGA,IAAI;wBAAE,CAACP,IAAI,CAACC,GAAG,GAAG;0BAAE,GAAGM,IAAI,CAACP,IAAI,CAACC,GAAG,CAAC;0BAAEa,MAAM,EAAE7B,CAAC,CAACC,MAAM,CAACqD;wBAAM;sBAAE,CAAC,CAAC,CAAE;sBAACT,OAAO,EAAG7C,CAAC,IAAKA,CAAC,CAACuE,eAAe,CAAC,CAAE;sBAACnB,KAAK,EAAE;wBAAEwB,KAAK,EAAE,EAAE;wBAAEvB,OAAO,EAAE;sBAAE;oBAAE;sBAAAN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,eAExR/E,OAAA;sBAAQmF,KAAK,EAAEnE,UAAU,CAAC4B,IAAI,CAACC,GAAG,CAAC,CAACc,MAAO;sBAACyB,QAAQ,EAAGvD,CAAC,IAAKZ,aAAa,CAAEkC,IAAI,KAAM;wBAAE,GAAGA,IAAI;wBAAE,CAACP,IAAI,CAACC,GAAG,GAAG;0BAAE,GAAGM,IAAI,CAACP,IAAI,CAACC,GAAG,CAAC;0BAAEc,MAAM,EAAE9B,CAAC,CAACC,MAAM,CAACqD;wBAAM;sBAAE,CAAC,CAAC,CAAE;sBAACT,OAAO,EAAG7C,CAAC,IAAKA,CAAC,CAACuE,eAAe,CAAC,CAAE;sBAACnB,KAAK,EAAE;wBAAEC,OAAO,EAAE;sBAAE,CAAE;sBAAAP,QAAA,gBACzN3E,OAAA;wBAAQmF,KAAK,EAAC,IAAI;wBAAAR,QAAA,EAAC;sBAAE;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eAC9B/E,OAAA;wBAAQmF,KAAK,EAAC,IAAI;wBAAAR,QAAA,EAAC;sBAAE;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxB,CAAC,eAET/E,OAAA;sBAAQ0E,OAAO,EAAG7C,CAAC,IAAK;wBAAEA,CAAC,CAACuE,eAAe,CAAC,CAAC;wBAAExC,QAAQ,CAAChB,IAAI,CAACC,GAAG,CAAC;sBAAE,CAAE;sBAACmC,SAAS,EAAC,WAAW;sBAAAL,QAAA,EAAC;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,eAE1G/E,OAAA;sBAAQ0E,OAAO,EAAG7C,CAAC,IAAK;wBAAEA,CAAC,CAACuE,eAAe,CAAC,CAAC;wBAAEnC,UAAU,CAACrB,IAAI,CAACC,GAAG,CAAC;sBAAE,CAAE;sBAACmC,SAAS,EAAC,aAAa;sBAAAL,QAAA,EAAC;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7G,CACN;gBAAA,eACD,CACH;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAEV;UAAC,GA5EanC,IAAI,CAACC,GAAG;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6Eb,CACZ,CAAC,EACDQ,QAAQ,CAACF,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAAC1E,EAAA,CA7OQD,GAAG;AAAAsG,EAAA,GAAHtG,GAAG;AA+OZ,eAAeA,GAAG;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}