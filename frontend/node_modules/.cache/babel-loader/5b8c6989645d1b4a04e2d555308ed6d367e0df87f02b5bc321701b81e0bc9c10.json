{"ast":null,"code":"var _jsxFileName = \"/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = 'http://localhost:5001/api';\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n  useEffect(() => {\n    localStorage.removeItem('token'); // Force login screen on every run\n  }, []);\n  if (!token) {\n    const handleLogin = async e => {\n      e.preventDefault();\n      try {\n        const res = await axios.post(`${API}/auth/login`, {\n          email,\n          password\n        });\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n      } catch (err) {\n        alert('Login failed. Please check your credentials.');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username or Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '0.9rem'\n        },\n        children: [\"Try \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"taskuser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), \" / \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"taskpass123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }, this), \" if you're just testing.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  useEffect(() => {\n    if (!token) return;\n    axios.get(`${API}/tasks`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(res.data));\n  }, [token]);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n  const renderTimeInputs = taskId => {\n    const time = timeInputs[taskId] || {\n      start: '',\n      end: '',\n      meridiem: 'AM'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"__:__\",\n        value: time.start,\n        onChange: e => updateTime(taskId, 'start', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"__:__\",\n        value: time.end,\n        onChange: e => updateTime(taskId, 'end', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMeridiem(taskId),\n        children: time.meridiem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTaskButtons = task => {\n    const isSelected = task._id === selectedTaskId;\n    const isComplete = task.status === 'complete';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(task._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleStatus(task._id),\n        children: isComplete ? 'Incomplete' : 'Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faClock,\n        onClick: () => setSelectedTaskId(task._id),\n        className: \"clock-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), isSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAllDay(task._id),\n          children: \"Span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSaveTime(task._id),\n          children: \"Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), renderTimeInputs(task._id)]\n      }, void 0, true)]\n    }, void 0, true);\n  };\n  const renderTaskList = () => /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"tasks\",\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.droppableProps,\n      ref: provided.innerRef,\n      children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: task._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task ${task.status === 'complete' ? 'completed' : ''}`,\n          ref: provided.innerRef,\n          ...provided.draggableProps,\n          ...provided.dragHandleProps,\n          onClick: () => setSelectedTaskId(task._id),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this), renderTaskButtons(task)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreate,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: renderTaskList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n  function handleCreate() {\n    if (!title.trim()) return;\n    axios.post(`${API}/tasks`, {\n      title\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(prev => [...prev, res.data]));\n    setTitle('');\n  }\n  function handleDelete(taskId) {\n    axios.delete(`${API}/tasks/${taskId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(() => setTasks(prev => prev.filter(t => t._id !== taskId)));\n  }\n  function toggleStatus(taskId) {\n    const task = tasks.find(t => t._id === taskId);\n    const newStatus = task.status === 'complete' ? 'pending' : 'complete';\n    axios.patch(`${API}/tasks/${taskId}`, {\n      status: newStatus\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setTasks(prev => prev.map(t => t._id === taskId ? res.data : t)));\n  }\n  function updateTime(taskId, field, value) {\n    setTimeInputs(prev => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        [field]: value\n      }\n    }));\n  }\n  function toggleMeridiem(taskId) {\n    setTimeInputs(prev => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        meridiem: prev[taskId].meridiem === 'AM' ? 'PM' : 'AM'\n      }\n    }));\n  }\n  function handleAllDay(taskId) {\n    setAllDayTasks(prev => ({\n      ...prev,\n      [taskId]: true\n    }));\n  }\n  function handleSaveTime(taskId) {\n    setSavedTimes(prev => ({\n      ...prev,\n      [taskId]: timeInputs[taskId]\n    }));\n  }\n  function handleDragEnd(result) {\n    if (!result.destination) return;\n    const reordered = [...tasks];\n    const [removed] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, removed);\n    setTasks(reordered);\n  }\n}\n_s(App, \"CBROa9/HhBXY5HIatmeuCALjTvs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","DragDropContext","Droppable","Draggable","FontAwesomeIcon","faClock","jsxDEV","_jsxDEV","Fragment","_Fragment","API","App","_s","tasks","setTasks","title","setTitle","token","setToken","email","setEmail","password","setPassword","selectedTaskId","setSelectedTaskId","timeInputs","setTimeInputs","savedTimes","setSavedTimes","allDayTasks","setAllDayTasks","localStorage","removeItem","handleLogin","e","preventDefault","res","post","setItem","data","err","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","style","fontSize","get","headers","Authorization","then","handleClickOutside","closest","window","addEventListener","removeEventListener","renderTimeInputs","taskId","time","start","end","meridiem","updateTime","onClick","toggleMeridiem","renderTaskButtons","task","isSelected","_id","isComplete","status","handleDelete","toggleStatus","icon","handleAllDay","handleSaveTime","renderTaskList","droppableId","provided","droppableProps","ref","innerRef","map","index","draggableId","draggableProps","dragHandleProps","handleCreate","onDragEnd","handleDragEnd","trim","prev","delete","filter","t","find","newStatus","patch","field","result","destination","reordered","removed","splice","source","_c","$RefreshReg$"],"sources":["/Users/anishkajan/Desktop/AccionLabsProject/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\n\nconst API = 'http://localhost:5001/api';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedTaskId, setSelectedTaskId] = useState(null);\n  const [timeInputs, setTimeInputs] = useState({});\n  const [savedTimes, setSavedTimes] = useState({});\n  const [allDayTasks, setAllDayTasks] = useState({});\n\n  useEffect(() => {\n    localStorage.removeItem('token'); // Force login screen on every run\n  }, []);\n\n  if (!token) {\n    const handleLogin = async (e) => {\n      e.preventDefault();\n      try {\n        const res = await axios.post(`${API}/auth/login`, { email, password });\n        localStorage.setItem('token', res.data.token);\n        setToken(res.data.token);\n      } catch (err) {\n        alert('Login failed. Please check your credentials.');\n      }\n    };\n\n    return (\n      <div className=\"login-screen\">\n        <h2>Login</h2>\n        <form onSubmit={handleLogin}>\n          <input\n            type=\"text\"\n            placeholder=\"Username or Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          /><br />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          /><br />\n          <button type=\"submit\">Login</button>\n        </form>\n        <p style={{ fontSize: '0.9rem' }}>\n          Try <strong>taskuser</strong> / <strong>taskpass123</strong> if you're just testing.\n        </p>\n      </div>\n    );\n  }\n\n  useEffect(() => {\n    if (!token) return;\n    axios\n      .get(`${API}/tasks`, {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then((res) => setTasks(res.data));\n  }, [token]);\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!e.target.closest('.task')) setSelectedTaskId(null);\n    };\n    window.addEventListener('click', handleClickOutside);\n    return () => window.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  const renderTimeInputs = (taskId) => {\n    const time = timeInputs[taskId] || { start: '', end: '', meridiem: 'AM' };\n    return (\n      <div className=\"time-inputs\">\n        <input\n          type=\"text\"\n          placeholder=\"__:__\"\n          value={time.start}\n          onChange={(e) => updateTime(taskId, 'start', e.target.value)}\n        />\n        <span> - </span>\n        <input\n          type=\"text\"\n          placeholder=\"__:__\"\n          value={time.end}\n          onChange={(e) => updateTime(taskId, 'end', e.target.value)}\n        />\n        <button onClick={() => toggleMeridiem(taskId)}>{time.meridiem}</button>\n      </div>\n    );\n  };\n\n  const renderTaskButtons = (task) => {\n    const isSelected = task._id === selectedTaskId;\n    const isComplete = task.status === 'complete';\n    return (\n      <>\n        <button onClick={() => handleDelete(task._id)}>Delete</button>\n        <button onClick={() => toggleStatus(task._id)}>\n          {isComplete ? 'Incomplete' : 'Complete'}\n        </button>\n        <FontAwesomeIcon\n          icon={faClock}\n          onClick={() => setSelectedTaskId(task._id)}\n          className=\"clock-icon\"\n        />\n        {isSelected && (\n          <>\n            <button onClick={() => handleAllDay(task._id)}>Span</button>\n            <button onClick={() => handleSaveTime(task._id)}>Event</button>\n            {renderTimeInputs(task._id)}\n          </>\n        )}\n      </>\n    );\n  };\n\n  const renderTaskList = () => (\n    <Droppable droppableId=\"tasks\">\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          {tasks.map((task, index) => (\n            <Draggable key={task._id} draggableId={task._id} index={index}>\n              {(provided) => (\n                <div\n                  className={`task ${task.status === 'complete' ? 'completed' : ''}`}\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  onClick={() => setSelectedTaskId(task._id)}\n                >\n                  <h4>{task.title}</h4>\n                  {renderTaskButtons(task)}\n                </div>\n              )}\n            </Draggable>\n          ))}\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <input\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n        placeholder=\"New Task\"\n      />\n      <button onClick={handleCreate}>Add Task</button>\n      <DragDropContext onDragEnd={handleDragEnd}>{renderTaskList()}</DragDropContext>\n    </div>\n  );\n\n  function handleCreate() {\n    if (!title.trim()) return;\n    axios\n      .post(\n        `${API}/tasks`,\n        { title },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((res) => setTasks((prev) => [...prev, res.data]));\n    setTitle('');\n  }\n\n  function handleDelete(taskId) {\n    axios\n      .delete(`${API}/tasks/${taskId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n      .then(() => setTasks((prev) => prev.filter((t) => t._id !== taskId)));\n  }\n\n  function toggleStatus(taskId) {\n    const task = tasks.find((t) => t._id === taskId);\n    const newStatus = task.status === 'complete' ? 'pending' : 'complete';\n    axios\n      .patch(\n        `${API}/tasks/${taskId}`,\n        { status: newStatus },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((res) =>\n        setTasks((prev) => prev.map((t) => (t._id === taskId ? res.data : t)))\n      );\n  }\n\n  function updateTime(taskId, field, value) {\n    setTimeInputs((prev) => ({\n      ...prev,\n      [taskId]: { ...prev[taskId], [field]: value },\n    }));\n  }\n\n  function toggleMeridiem(taskId) {\n    setTimeInputs((prev) => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        meridiem: prev[taskId].meridiem === 'AM' ? 'PM' : 'AM',\n      },\n    }));\n  }\n\n  function handleAllDay(taskId) {\n    setAllDayTasks((prev) => ({ ...prev, [taskId]: true }));\n  }\n\n  function handleSaveTime(taskId) {\n    setSavedTimes((prev) => ({ ...prev, [taskId]: timeInputs[taskId] }));\n  }\n\n  function handleDragEnd(result) {\n    if (!result.destination) return;\n    const reordered = [...tasks];\n    const [removed] = reordered.splice(result.source.index, 1);\n    reordered.splice(result.destination.index, 0, removed);\n    setTasks(reordered);\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}